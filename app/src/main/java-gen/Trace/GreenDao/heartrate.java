package Trace.GreenDao;

import Trace.GreenDao.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table HEARTRATE.
 */
public class heartrate {

    private Long id;
    private Integer startTime;
    private Integer max;
    private Integer avg;
    private Integer fakeMaxRate;
    private Integer fakeAvgRate;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient heartrateDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public heartrate() {
    }

    public heartrate(Long id) {
        this.id = id;
    }

    public heartrate(Long id, Integer startTime, Integer max, Integer avg, Integer fakeMaxRate, Integer fakeAvgRate) {
        this.id = id;
        this.startTime = startTime;
        this.max = max;
        this.avg = avg;
        this.fakeMaxRate = fakeMaxRate;
        this.fakeAvgRate = fakeAvgRate;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getHeartrateDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getStartTime() {
        return startTime;
    }

    public void setStartTime(Integer startTime) {
        this.startTime = startTime;
    }

    public Integer getMax() {
        return max;
    }

    public void setMax(Integer max) {
        this.max = max;
    }

    public Integer getAvg() {
        return avg;
    }

    public void setAvg(Integer avg) {
        this.avg = avg;
    }

    public Integer getFakeMaxRate() {
        return fakeMaxRate;
    }

    public void setFakeMaxRate(Integer fakeMaxRate) {
        this.fakeMaxRate = fakeMaxRate;
    }

    public Integer getFakeAvgRate() {
        return fakeAvgRate;
    }

    public void setFakeAvgRate(Integer fakeAvgRate) {
        this.fakeAvgRate = fakeAvgRate;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
